@model PagedList.IPagedList<Forum.Models.Questions>

@helper Truncate(string input, int length)
    { 
     if (input.Length <= length)
     { 
        @input 
     }
     else
     { 
        @input.Substring(0, length)<text>...</text> 
     } 
}
@{
    ViewBag.Title = "Index Questions";
}

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>

<fieldset>
    <legend>Questions</legend>
        <div class="login_main">
            <div class="login_float">
                @Html.Partial("~/Views/Shared/_LoginPartial.cshtml")
            </div>        
                @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                {
                    <p>
                        <i>Group: </i> @Html.DropDownList("questionGroup", "All") 
                        <i>Keyword: </i>@Html.TextBox("searchString", ViewBag.CurrentFilter as string) <input type="submit" value="Search" />
                        <i>Search on: Name, Description and Tags</i> - <i>Sort on: Votes</i><br /><br />    
                    </p>            
                } 
        </div>
        @if (Request.IsAuthenticated)
        {
            <p class="link">
                @Html.ActionLink("Forum groups", "Index", "ForumGroup") | @Html.ActionLink("Create new question", "Create")
            </p>
        }
        else
        {
            <p>
                Login to create a new Question or Group!
            </p>
        }
        <table>
            <tr>
                <th>@Html.ActionLink("Date", "Index", new { sortQuestion = ViewBag.MainParm, currentFilter = ViewBag.CurrentFilter })</th>
                <th>@Html.ActionLink("Group", "Index", new { sortQuestion = ViewBag.MainParm, currentFilter = ViewBag.CurrentFilter })</th>
                <th>@Html.ActionLink("Name", "Index", new { sortQuestion = ViewBag.MainParm, currentFilter = ViewBag.CurrentFilter })</th>              
                <th>@Html.ActionLink("Votes", "Index", new { sortQuestion = ViewBag.SubmainParm, currentFilter = ViewBag.CurrentFilter })</th>
                @if (Request.IsAuthenticated)
                {
                    <th></th>
                }
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="date" onclick="onRowClick(@item.QuestionId)">
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td class="group" onclick="onRowClick(@item.QuestionId)">
                        <a href="@Url.Action("Details", new { id=item.QuestionId})">@Truncate(item.QuestionGroups.QuestionGroupName, 25)</a>
                    </td>
                    <td class="title" onclick="onRowClick(@item.QuestionId)">
                        <a href="@Url.Action("Details", new { id=item.QuestionId})">@Truncate(item.QuestionName, 100)</a>
                    </td>
                    <td class="vote" onclick="onRowClick(@item.QuestionId)">
                        @{
                            var UserId = ViewBag.UserId;
                            bool exists = item.Votes.Where(v => v.QuestionId == item.QuestionId && v.UserId == UserId).Any();
                        }
                        @if (exists == false)
                        {
                            if (Request.IsAuthenticated)
                            {
                                using (Html.BeginForm("Details_Create_Vote", "Home"))
                                {
                                    @Html.AntiForgeryToken()
                                    <div>
                                        @Html.Hidden("UserId", (object)ViewBag.UserId)
                                        @Html.Hidden("QuestionId", (object)item.QuestionId)
                                        <a href="@Url.Action("Index")" data-form-method="post">Vote!</a>
                                    </div>
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(model => item.Votes.Count)
                            }
                        }
                        else
                        {
                            @Html.DisplayFor(model => item.Votes.Count)
                        }
                    </td>
                    @if (Request.IsAuthenticated)
                    {
                        <td class="delete" onclick="onRowClick(@item.QuestionId)">
                            @Html.ActionLink("Edit", "Edit", new { id = item.QuestionId }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.QuestionId })
                        </td>
                    }
                </tr>
            }
        </table>
      <br />
      <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount
     
        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("<<", "Index", new { page = 1, sortQuestion = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortQuestion = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
        {
            @:<<
            @Html.Raw(" ");
            @:< Prev
        }
     
        @if (Model.HasNextPage)
        {
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortQuestion = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortQuestion = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
        {
            @:Next >
            @Html.Raw(" ")
            @:>>
        }
    </div>  
</fieldset>

<div id="result"></div>

<script type="text/javascript">
    $("a[data-form-method='post']").click(function (event) {
        event.preventDefault();
        var element = $(this);
        var action = element.attr("href");
        element.closest("form").each(function () {
            var form = $(this);
            form.attr("index", action);
            form.submit();
        });
    });

    function onRowClick(id) {
        $.ajax({
            url: "Home/Read/" + id,
            type: "Get",
            success: (function (data) {
                $("#result").html(data);
            })
        });
    }
</script>